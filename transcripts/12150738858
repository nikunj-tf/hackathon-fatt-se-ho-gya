How's it going? Hi Mark. All this good, how are you? I'm really well. Thanks for making time. I'm in my caramel. I'm like three minutes from my house, I thought, so I'll switch over in like three minutes onto my computer. Great to meet. Thanks for making time for us. Super nice to meet you, Mark. And thanks a lot for accommodating later in the evening. No problem. I'm sorry, I just misjudged traffic here in California. You never know, I should have given an extra but anyways, I'll just switch over in like three minutes. Great to be you. I'm looking forward to the conversation here and I appreciate you jumping on early too, Mark. I don't know if I joined late, but is it helpful for maybe I don't know if you kind of share anything on Greycroft. Is it helpful for no, we were just getting going. Yeah, you want to kick off and then I'll add a little color before we get going. Have you met with anyone on the Greycroft team? But is it helpful for me to even give the high level on the firm too and all that kind of stuff beyond what we're spending time? Yeah, we haven't met anyone. Mark Greycroft. It would be nice to know a little bit more. Yeah, the high level is our team structured kind of into three different stages. We have the early stage team Mark and I sit on. That's going to be C and Series A investing. We have a growth team that does kind of series B through late growth, series de, whatever they're kind of vernacular is at that point in time. And then we have a crossover fund that does our pre IPO in public equities rounds because we're full life cycle investors can talk more about that. But Mark and I sit on that early stage team focused on enterprise software. We have other teams you'd expect health tech, consumer tech fintech. But for Mark and I focus, we're spending a lot of time and I put this in the email. We've been thinking about the fact that it's very clear that all companies are going to need to incorporate Aiiml into their applications. Not every company has access to that talent. And so when they do have people in their companies, they usually get pretty constrained on what they're asked to do. They're asked to do basically everything in the lifecycle, and data scientists don't have the time for that. They're working on too many things. And so it's clear that they're going to have to take a similar approach like data scientists are going to have to take a similar approach to what happened for devs, and that's to give them tools to help with that full lifecycle. So taking that DevOps approach of shifting everything left, making it really easy for self served developers, we've seen that with Humanity where that company happy to talk more about them, but the light version is they make it easy to just deploy apps to whatever cloud workload they need without the opt team bottlenecking them. Similar thing, I think, to what you're solving on making it really easy for data scientists to just worry about building the model with Intentionality and not having to worry about a ton of the other steps of the process. And so we're right with you on that. To date, I talked about the DevOps side. On the ML side, our growth team led an investment in a company called Arthur AI very recently. At the early stage side, we have a few companies both on the application and on the infrastructure side. Happy to go into those if helpful, but we've been spending a lot of time in the space thinking about what that looks like to make sure that data scientists are set up for this, especially right now. A lot of excitement in the space. Mark, do you think you'd add in there? No, that's great. We can go more Mark Greycroft and some of the other platform services and all that kind of stuff. But at the core, we love these areas that you're innovating in. And for us to kind of meet teams as early as we can and start building relationships, even if the timing isn't perfect now for you to raise or whatever, it's just great to collaborate and learn more about you. Obviously, we can be here to help at any time if that's helpful to you. Awesome. Thank you so much. Thank you so much, Nick, for that, for the background. Thanks a lot, Mark, for jumping in. Nick. So I think this really helps, knowing that you already know about the problem and appreciate the problem. So I think in our call today, I'll actually not spend a lot of time motivating the problem itself. But before we move forward, you mentioned one of the companies did you say Manitech, where your company helps people deploy applications across clothes? Yeah, I'll send a link. It's a developer platform that really just helps them basically be a self service. Understood. Different stuff. It's tough to summarize in like, one sentence, but the website should be helpful. I don't think it's remotely competitive to you all. Lovely. Yeah, this is great. I'll check them out. Thank you so much for sharing. Awesome. All right, so I'll get started from our side. Maybe I can start with a brief introduction about myself and then take it from there. Great. And before I get started, just one question. Is there a certain area, given that you have already been exploring the space, given that you already understand the landscape here, is there a certain area that you think you would like me to dive deeper into in terms of what we are building, where we are? Is there a question that you're really trying to answer first? It's a great question. I think the big thing is, as I kind of think about this right now, you're kind of exploring, it seems like being full lifecycle is what you're doing, like the full end to end. And there's always trade offs between depth and breadth at certain parts in the process. And some developers, some data scientists have their tool they want to see at each step whether that's engineering and storing their features. There are certain companies that obviously own that and it'd be great to hear how you interact with those who's a partner, who's a competitor in your mind, do you? They want a one stop shop, just kind of that because we've been exploring and thinking through that as well in the trade off. Got it. Understood. All right, I'll zoom into those parts a little bit more. Understood. Cool. So let me start with a brief introduction about myself, as you all might have seen on my Linguan as well, that I did my undergrad at IIT Karappur, where I met my now cofounder San Raghad Abhishek. And after that I moved to the US for my masters. So at UC Berkeley, I worked a lot on probabilistic theory, graph theory based models, published a couple of papers as part of that journey, and then switched back to my hat of building out ML models, which is what I started doing Grad as part of a startup called Reflection. So at Reflection, we were building recommended systems for the ecommerce industry. Okay, so the idea was companies like Disney, Gap, Banana Republic would use the personalization models that we build out directly for serving search and recommendations on their website. And there I got a chance to spend the first two years working more on the modeling side, building out and pushing these models for the clients. By the time the company grew and we had like five different teams building out machine learning models. So we realized that all of us ended up doing a lot of similar operationalization stuff internally and it made sense to kind of build out a more horizontal platform for the company. So I took that last year and a half, actually trying to build out different parts like feature stores, model deployment, model monitoring, these components of the overall ML life cycle. And that's where I think the first bug of what we are building now got into my head that, okay, this seems like an important problem that we decided to solve here. And we were actually quite proud of it about what we had built out, because we saw roughly 35% 40% increase in the developer efficiency overall through the platform. I think the pride lasted, only it was basically very short lived because once I joined Facebook, I realized that we were practically just scratching the surface. And to be honest, there were a lot of things that we didn't even like, we didn't expect would happen, essentially. Right? What we are doing is already pretty good and we did not know what are the boundaries. And I really realized a lot of things in terms of the boundary setting, only after I joined Facebook, where thousands of developers are deploying thousands of models in minutes, right? Literally like getting everything up and running in minutes. So that was very enlightening. When I joined Facebook, by the way, Facebook, I did not actually work on building out the Platform, but I was a user of the platform. So I was building a lot of deep learning models, but really got a chance to experience the platform in depth. Post Facebook, I started up in the talent space again with an Rag and Abhishek where we were essentially building a version of Triplebyte, but for the India and Southeast Asia economy. And we spent about a year building the company. We got like 30 companies as our customers meanwhile, and got selected into YC. The interesting part that happened was at YC. By the way, are you all familiar with Triplebyte? Lucy is familiar with it. I don't know that I've ever interacted with the team. Okay, so Triplebyte is basically a company that helps other startups to hire vetted talent. So they would already run like engineering and coding tests through other interviewers set up and all, and help them hire this challenge. They're also a YC company, roughly like 40 million in funding or whatever. So it turns out that when we joined YC, our partner was actually the founder of Triplebyte. And by the time we were facing a lot of operational difficulties with the overall model that we had set up and we identified a few flaws in our thesis overall. So we were brainstorming much in detail about are these more fundamental flaws, should we try to take a step back and actually not continue to build in this domain even though we are getting some traction? And we had these brainstorming sessions with Herj and turns out Herch mentioned that what you all are realizing right now. We realize this after four and a half years of running Triple Guide and 40 million of funding. Funding is not able to help us solve the problem. So if you have realized this thing, I would say that if you can move out, it's better to move out. So at that point, we decided that there was another large company in India, practically the largest talent company in India called Info H. They were trying to build something similar, but they did not have much success in terms of getting the customers. So we decided that acquisition was a better route. So we let and Tired get acquired. It's still running. They are running the Platform currently. And the three of us decided to focus on building like True Foundry after a bunch of discussions around the space that I talked about my experience at Reflection at Facebook and some of the ML models that we were building at Entire as well. So that's kind of how overall the story of boundary came into being about where we are. I'll also take any questions so far, by the way. No, that's great. That's cool. All right, now, before I move forward, I'll also take a couple of minutes to introduce my co founders, abhishek and Rag as well. So Abhishek was at Facebook. He comes from a distributed systems and infrastructure background. He led the Caching infrared team, and before he quit, he was leading the entire videos.org. And Abhishek is actually one of the fastest growing engineers at Facebook, getting to senior staff in like five year time frame, roughly. Whereas anurag he was a member of CEO office and was managing a portfolio of roughly 600 million at a hedge fund called WorldPoint. He's also an angel investor, having invested in roughly 22 startups so far. And as you all know that we all attended undergrad together, so roughly know each other for close to 15 years now. Awesome. See that's awesome. I love that. It's great to build a company with your undergrad friends, to be honest. Awesome. And in this journey of building True foundry, one of the things that we have also realized is that this is a very hard intra problem that we have taken up and very easy to make mistakes, take wrong design choices. So strategically, we got a lot of advisers on board who have built out practically the same thing at Facebook. Like Ebbie learner Aditya was the chief architect at Ebay Learner Arpith, who built this out for salesforce, and Tall, who led the entire TensorFlow TFX team at Google and then is now an architect at Snowflake. So anytime we are taking more critical decisions, we kind of run it by some of these experts, and that helps us just make the right design choices. So that's about the overall team set up. We have roughly 15 odd full time members, mostly on the engineering side, and we have five other contractors and interns overall working on the team with Truefoundry. That's my favorite size of the company because it's big enough, you can really get a lot of stuff done, but small enough where you can still get everybody in a room and figure stuff out when you need to. And that was my favorite. Love it. Yeah, we experienced that day to day. We have this day to day. The speed of execution is just like we also love how fast we are moving right now, but every time you have to change something, we're like, oh, yeah, one meeting and then boom. Yeah, no, exactly. It just gets harder when you get bigger. Right this size, you could just get so much done at that scale. Absolutely. All right, so I'm going to not spend a lot of time motivating the problem. I think you'll understand that data science is machine learning is taking over the world. You might have even seen these starts that 90% of models don't make it to production. Median time is like 57 days or something, right? To take a model to production. Now I'm also skipping this flow. I typically use this to explain the overall ML workflow to people necessarily come from that background. This maybe I'll spend, I guess you already mentioned most of these points as well, so I'll skip all of these. All of these. Now this is where I think we should probably get started. So I think before I introduce answer the question that you had mentioned, Nick, about the breadth versus depth. Right? Let me actually first introduce the persona for whom we are actually building out the product. And I think that will answer parts to that question and then I will add more color to that. Okay. And actually spend a decent amount of time just trying to understand the exact person that we are trying to solve the problem. That's great. I love it. Perfect. So we call this person Eva Jones, and she's a Senior Director in the ML platform team for a decently large enterprise. Okay. Now I'm mentioning ML platform team. So not necessarily the team that's building out the models, but the team that is supporting all the teams in the company that are building out the models. Right. Now let's understand the context in which Eva is building out this ML platform today. So she has like these 16 different business units, all of whom are building machine learning models and have like 15 ML developers per view, let's say. And of course, across these different business units for such a large company, they're building out models in Vision and LPG and all of these different data set types, right? Yeah. Now one unique constraint that typically companies at this scale are working with is they never get to start with a clean slate. So they always have some internal constraints, some internal tech that's already built on top of wish they have to build out the platform. So like in this case, the example that I'm talking about, let's say they have already invested a lot in their internal cloud and they want to make sure that they're able to leverage that internal storage system. And they have spent a lot of time building out Auth systems across the company and they want to make sure that use a unified Auth system. That's it. Right. And lastly, that they are using all the three clouds. AWS GCP and they have a heavy presence on premise as well. So that's roughly the context for whichever is trying to build out NML platform. Any questions on this? No, I think that'll try cool. Now her motivation, her goal basically is to create impact, get promotion, whatever. That's what she wants to do. And there are two main routes that she has to be able to create that impact. Number one, that she wants to get the platform adopted internally. So like more the developers in different business units using her platform, the more impact she is likely creating. And the second is that can she empower these business units to actually ship machine learning models to the end clients so that they can train and retrain their own models, which will roughly generally add to additional revenue because the platform itself, the product itself is maturing. Right. So those are the two areas in which she can create this impact. Now, there are multiple options, multiple solutions that she potentially has to be able to build out this platform right, internally. So she could build something on top of the Sage Makers and Vertex AIS of the world. Now, the problem with these are that they are cloud specific, so she will have to go build out all the abstractions that are needed and generally hard building anything on top of these closed products, right. You could also choose something like Data Robot, Data IQ C Three, which are the more established players who typically have all the solutions across different clouds, although isolated. Right. The problem is that she cannot modify like these platforms come as is. So you take it what you see basically, right. So you cannot work with these internal constraints at all. Now, there are some startups like Base Ten and Bento ML which are not enterprise ready today, right? So they are actually built out very ML developer focused to help them quickly be able to deploy the model, but they are really not enterprise ready. And Selden, I think is enterprise ready overall. I think it will be likely a strong competitor for us as well. The problem with Selden is that it's a very narrow scope platform today from an enterprise perspective. And that's the other part that I will feed into the answer to your question, Nick, as we move forward about what's the level of breadth that we have chosen that we think is right for the segment that we are serving to. Okay. And lastly, her option is that she takes a bunch of tools, QFlow, ML, Flow, MPs, et cetera, and those on top of that. And to be honest, a lot of the companies are actually taking that approach. Initially we have seen a lot of companies getting burnt by the maintenance overheads of Kubeflow and then coming to either platform. Like these are platforms like True Conference. That'S kind of like the do it yourself version without having the platform. This is actually super analogous to humanity. They're different tools, tooling and other stuff they're using. But the conceptual view is the same. They're trying to roll their own or they're kind of trying to do it only on one specific platform, like AWS or Azure. It's pretty similar. Love it. Awesome. So almost like anyone who is trying to do this is kind of like false in our ICP in some way, right? Yeah. Now just adding a little bit more detail to the different stakeholders that Ever is dealing with, right. Ever has to serve, basically. So the entire dev SEC ops angle, which I think is the primary angle with which we are going to the market because we think for enterprise customers, this is one of the most critical things, right. Where the devscops team have different priorities. Like they want to add guardrails so that people don't make mistakes, they can control the cost and stuff like that, right. Security paramount, like you cannot secure access, control, data security, etc. All these are paramount. You can't make any mistake with stuff like this, right? Yeah. Now, the ML developer persona, as you would imagine, their priorities are very clear. They want to be able to deploy anything anywhere really fast. Right. And ideally, the segment that we are dealing with typically wants to have Python interfaces very frequently, right. So everything that they want to do, ideally what they want to see in Python, they can work off of jupyter notebook or Python script. They would love that. And ideally be independent in terms of getting the infrastructure asks from the DevOps team so that they can again move fast from that perspective. Now, platform is their own team, but they also have some personal priorities that don't give me ad hoc tasks. Ideally, I want to empower these developers and not become kind of service these developers in one way, right? And your KPIs are that everything that you're doing is monitored. If something breaks, you are kind of responsible. And lastly, you follow all the best software engineering practices like CI, CD versioning, reproducibility, et cetera. And of course, lastly, you have the business users who care about more and more emblem powered use cases faster and faster shipped to the clients, right? That's overall the stakeholders that she is dealing with and the platform needs to be built with these stakeholders in mind. Any questions here? No, that all makes sense. All right, now this I think is one of the most important slides to just understand how we think about the product. So True Foundry is actually trying to build out a base platform for Eva Jones. That is, she's trying to build out the platform instead of her building all these features, all these components from scratch, she can build on top of what we have built out. So we kind of add an interface to the external world and then deliver a very customized platform internally. And the reason we are choosing this approach is because we believe that it's almost really hard to build out something as an outside vendor that solved for all the use cases of a company internally. Plus, if you go that route, it also triggers insecurities within the platform team because they feel like their job is at stake. But this way they're building on top of you so they are more supporters. That's interesting. Maybe on that. How does that parlay into the customer base you're targeting today? Because that does narrow the scope of the world to companies that have robust data science teams, but also have platform engineer like platform teams that are large enough to handle spinning this up too. Right, so you're right by the way, it does limit the scope and in fact, I'm going to limit the scope. Take a note more when we think about which is a segment that we're targeting right now, right? Turns out that because our platform is we are still building out the platform, it's extremely hard right now to take a battle against all of these larger cloud providers because they have so many more features than we do right now that for some feature completion we lose out the battle basically. Right. So we have to figure out a segment that people are not able to serve. That's an underserved segment. So even if that's a very narrow segment in the beginning, that's fine with us because in the first three, four years, if you can serve like one segment really well, that's fine. And then of course, once our platform is mature, we can always take on the battles, expand the scope with these other cloud providers and stuff, basically. Right. It's just an initial focus that we are talking about. And on that note, I will just share this one information to kind of limit this a lot more. So we are targeting like the G 2000 companies, only those companies in the beginning that are cross or hybrid cloud so that we avoid any competition with Sage Makers and Vertex of the World. And here also when I'm saying the cross or hybrid cloud, I mean actually companies that are deploying models across clouds. Not just multiple clouds, they're not just in Azure Shop or what. Yeah, right, exactly. And lastly that we also look at the number of ML developers that they have a significant ML team size overall. So when we put all of these filters, roughly this number boils down to 400 and 450 odd companies out of 2000. And our goal is if we can basically serve in the range of 50 to 80 companies by the next three to four years, that would be amazing. Right? So I think that's what we want to focus on, basically. Got it. Okay, that is very helpful. And also just hearing you lay that all out is helpful to my original question. You're building like the full enterprise grade platform for platform engineers to enable their data science teams, which is a very different approach than even like what you were describing with benzo ML and Base Ten. They're enabling like the self serve individual data scientists in a startup. It's a very different segment. So that's helpful. Yeah, exactly. Cool. Okay. Yeah, keep going. Sorry. I was just going to say. I'm. Going to jump ahead and ask you a question, but you can reserve and we can come back to it because I don't want to break the flow, but I have some ideas in my mind, but also some questions around the go to market, if that's kind of your strategy. Because it feels like you could take very much like account based marketing approach and you could know those thousand customers and find 100 of them so you can target them. But at the same time the way your product works, I imagine it could be somewhat of a product led discovery approach. Maybe not how that gets sold, but like these folks, like Average going to be technical enough that they could be looking for tools like yours and find them or hear about them in the community and discover them and start playing with them even though it might not unlock the full enterprise version that you'd go out and sell them. So anyways, I have some ideas but also some questions around the most efficient way to get those 1st 100 customers. But we can come back and talk about that when you get to the go to market section. Sounds good. I would love to hear your thoughts on this, Mark. Yeah, because I'll walk you through some of the things that we've seen kind of work both from that top down selling kind of sales lead approach and also a bit more of the bubbled up kind of developer focused product Led or at least product driven kind of marketing motions. So let's come back and talk about that. Awesome. And just wanted to make sure do we have like ten minutes to go over to cover some of the further details? Yeah, I don't have anything after this, so keep going. Okay with you, Nick? Yes, all good with me. Awesome. All right, so now let me actually walk you through a couple of these examples on how we have tried to create impact for some of these companies that we started to work as design partners. Oh, by the way, when I'm giving this background about companies, I want to make sure that you all understand that these are like early customers design partners. That's the phase that we are in actually. That's fine. That's great. Thanks for calibrating. That's awesome. Yeah, we are still trying to figure out a lot of things around go to market and basically we are fairly early is what I want to make sure these types don't make you feel like that we already have a lot of paying customers and blocks. Okay, so like the first case study is with $100 billion plus conglomerate that we are working with now, their developers were taking like roughly 42 days on an average to make deployments. And the way they got bought into what we are building is they literally got their application in a meeting and over a screen share in roughly less than an hour they were able to get the entire application up and running, deployed on Kubernetes having an endpoint that they could share with their back end team. So that's what actually created like that wow moment for their team. Turns out that during our engagement they did a cloud migration. From AWS to GCP and it took them six days to do this entire migration. And I think you all know that typically cloud migration projects are like multi year projects for most people. So they were again amazed by this. Third thing is the developer team typically allocate seven days whenever they have the create tickets for the Infra team to allocate some resources or give them permission, et cetera. Now it takes them five minutes because these things are baked into the platform. And lastly, they had already built out an internal platform overall. But once they saw all of this experience that we're trying to build in, they actually now are migrating their existing ML models deployed also to our platform. Basically overall. They are trying to migrate everything to True Fountain. That was like one thing. And one of the things that I loved personally is once we did this demo for them where we helped them migrate one model to production, three other developers who were part of the call just went and tried out the platform themselves and deployed. So that was very rejuvenating to you, basically. That's great. The second one that I wanted to mention is this another platform, the company that decided to build an internal platform on top of Kubeflow and ML flow and spent about a year and a half building it. Then they realized that there's a lot of problems shipping models to end clients and the developer productivity landscape. So they ended up evaluating other software vendors and they valued eight companies overall for roughly a period of one year. Then after like we got a chance to work with them as Truefoundry, they evaluated us for four months as well. So their overall evaluation process was very thorough and eventually they decided to use us. And a few reasons that they called out, I want to share with you all this is by the way, verbatim from their ML platform director is that we have a cross start support which is like non negotiable for them. We have a flexible architecture. And what I mean to say by that is that we work well with the existing buildings that helps them build platform build the platform things that we have covered are actually wide enough scope that they feel like developers can directly hit the ground up and running, basically. Ground running essentially, right? So they don't have to go make a lot of other parts of the platform. They can actually build most of it on top of what they are building. The UI friendliness and the customer support, like literally every question that they asked on our Slack group was answered in less than 15 minutes. So they also appreciated that quite a bit. There's a couple of other case studies that I'm skipping in the interest of time for now so that we can actually discuss a little bit more on the go to market, actually. And I'll share with you all what we are doing right now in terms of go to market and would love to hear your thoughts. Mark yeah, so right now we are basically doing the more outbound motion where we try to understand every company from different perspectives. So we talk to their developers, we talk to their mid managers, we talked to their leaders, et cetera. So that's, like, one thing that we are trying, a couple of other things that have worked out really well for us in this domain is we ran a campaign to reach out to CEOs and CIOs of Fortune 500. Saying. Not asking to sell. Not asking to buy our product. Just asking to potentially invest in us because we're building something nice, something cool. We got like five X, the response rate that you typically get in these cold outbound emails. And by the way, while doing this we also increased hours, we have a safe running and we have now more than a million dollars in commitment in that safe because a lot of that's great and along the journey these are the type of people that we will eventually speak with and sell to. So essentially we'll seek their help. But right now we're in the process of understanding the problems facing a lot of these enterprises, right? So that's the motion that we are taking. We will invest in the more bottom up product led discovery as well. We have not done a lot of that so far. The idea is that we are going to create these tools where like that we will make it public where people will come with their own Python functions or models like literally on the browser, just paste their functions and they have a deployed function. Just give me a Uri of the models. They have deployed models. So we'll build out a bunch of these apps and also deploy some of the more popular models. Basically that like there's a stable diffusion deployment and there's chat GPT deployment and stuff like that so that people can discover the platform more nicely and of course write content around this. So that's a strategy that will take a little bit further down the line once we have truly understood that what's our entry point with these enterprises or who is that persona that we need to target? Because it's a little bit more that we are trying because it's not very clear always who is the lead of the platform within these enterprises. Humanitar has a little bit of the same challenges at times. Pardon me? Yeah, I was just saying humanitar has a little bit of that same challenge. So those are some areas that I think we still need more visibility into that we are working towards but would love to hear your thoughts on the go to market as well. So take these for grains of salt right? Because I don't think I would appreciate your business enough yet to really be super dialed in on this right. But take this as some food for thought to test in your different market tests you're doing right as you're going to market. So I think the one thing that I really like about your approach this early, let's call it your phase one market development approach, right? Like you can get to 100 million of Arr by finding 100 million dollar customers, right? I think that's a good kind of especially when you feel like there's at least 2000, there's probably 10,000 companies that have big enough teams that could fit that ICP and you need to get 100 of them. I think it does limit the tam, but the tam is still plenty big enough right, that you can so I guess the question is how do you get those 100 and what are the attributes? And I think the key is going to be like, who can you hook as your champion? Right? So it might be Ava, but in some cases it could also be the developers. Right. We see this with Gee Manitech. In some instances the developers have the juice. I'm not sure kind of what you thought of Facebook versus the DevOps or who kind of have the power, but some places are a little bit more command control, other places are a little bit more developer driven. Right. And so you might have to test a few. But because you can identify those 10,000 accounts or 2000 and you can do pretty specific account based marketing, you can probably figure out literally who those people are and market to them. Right. So that would be, I think that's what the top down view? I think the bottom up view is if you could get some buzz going with your early customers, like, it sounds like you're getting some really impressive feedback from these early guys that are using it, how it's making their life so much easier and changing it. My strong recommendation without even knowing anything else would be get those guys to be like super influencers, like testimonials, get them to broadcast out, talk about how great this is. You'll start blogging about it and discord and all these other channels and get them to be kind of a community of momentum that you can hook. It sounds like you've been doing a spar job with advisors and with some of these other potential customers, but working with you build a groundswell of energy around the early customers that are using this and seeing this benefit because the developers are going to love it. The data scientists are going to love it. Humanitik has this idea that they this I found pretty fascinating early on is that they have this idea of kind of like the way we would have been. An old school model with classic servers have had a golden imprint of a laptop or a server that's like your standard imprint before the cloud. Really. Even when you're putting them in data centers, you'd have like okay. These Blade servers are going to look like this and they're all going to work together, obviously. Now, in the cloud, that's like a different the notion of like a golden model is a little bit different, but it's almost like a golden deployment path, right, of how can you stamp out each one of these apps? It's going to look like this here. I think you're going to see the same thing with these ML models. I think if you can get those people excited about it and talking about it, you could start getting some bottoms up. Like, they might not be downloading it and buying it, but they'll be coming to your website asking why there will be more an Inbound Motion that you can qualify them too. Yeah, that makes a ton of sense, actually. That's a project that we took up for to be finished by March. All the current customers that we are currently working with, we will have some testimonials and blogs coming out of them also. Because if they can describe in their words the magic, it's so powerful, right. And both as you're selling, but also you start to get those other bottoms up bubbling up, if you can capture that essence and the market starts to feel that you'll be the perceived leader even before you're like the market share leader. Right. Because that buzz will be working for you. And even if you don't have a total Bottoms up PLG mark anyway, there's one woman that works with me and our team, Alison. She was the first CMO at Stripe and she kind of built that model out for Stripe, right. The whole developer Led model around kind of just take so she's got a lot of history and energy around helping our companies that have a Motion that's a little bit like yours. She knows this stuff much more detailed as an operator than me in Deck. But nice. It would be very nice to be able to speak with her and learn. From yeah, we can definitely set up a follow on with that. She's got a lot of worst stories of what worked, what didn't work. We don't need to make the same mistakes. Like we can always that would be very helpful. Yeah, we'll follow back up on that. Yeah, I do have a call in five minutes. Yeah, no worries. Sorry. We run it over. I appreciate you making time for us. Of course, and just covering a little bit about where we are, what we are looking for in the next, whatever, nine months to one year. So the way we think about it, Mark and Nick, is we are given this is a complicated infra product. We are in a 24 month product building, go to market type of cycle. Okay. And right now, we are in month 14. So we started January like last year when we started building out the product. So the goal for us, by the end of these 24 months that is the end of this year would be that we have a product and a user that's solidified that, okay, this is the user that we will absolutely build out the product for. This is the type of approach that we're going to take. And we have roughly five to six enterprises that we are working with as design partners. A few of them converted to paying customers, by the way. We did convert one of the large companies that talked about as paying customers recently. And the second one, we are negotiating a contract with them. So keeping fingers crossed, nothing is done till everything is done. So far, it is showing good signs. We are showing good sign of progress. And we do expect that if this momentum continues, we will hit like five to six enterprises that we're working with at the end of this year. And then after that is when we'll think about scaling. So that's about how we are operating. So everything is founder led. Like, we take all the sales calls, we have BDR helping us, but we're not hiring until we have really? That's smart. Yeah. You guys will figure out better than anybody how to sell it at this stage. If you guys have attributes of the companies that you think have a nava right. Let us know what those are and we'll work our network and see if we can try to get you in front of some other folks that might be kind of helpful to you as you're looking for those first five or ten guys or whatever. Because across our team, we have people out talking to bigger companies all the time. Absolutely. We'll certainly keep an eye out. If you have any questions, I'm happy to take. Otherwise, I have one question for you both. Yeah, sure. Please fire away. So I want to understand you heard a little bit about what we are building, how we are building. Happy to showcase demo at some point if need be. But the important question that I always keep asking myself, what are my potential blind spots? Right. So when you hear me talk about the product, what do you think we might be missing and we should be focusing on so that we don't make those mistakes in the near future whenever we are taking these decisions? Yeah, excellent question. Nick, you want to go first or you want me to fire away? Go ahead. I want to think about it for a second longer. I think the thing that jumped out at me that's interesting is and I think you will ultimately, as you're entrenched and it's working and companies are getting the value from your platform, you'll have many people that are excited about it and many champions. And I don't think you have a lot of natural enemies because the one that could be is Ava and you're kind of co opting her. Like it sounds like in your approach. Right. So the thing I would be looking for, I don't know if it's a blind spot, but besides obviously trying to get these early customers working with you, I'd spend time across each of those different constituencies, her role, plus the one she's serving, and figure out who's most excited about you. And can you hook them in a way where they kind of pull you in as opposed to, you have to sell to her and then have her bubble it down? Like, could you get pressure from some of her clients, essentially, to say, this is awesome. I've heard other people using this. You should check this out. You would love this, and kind of create a little bit of a champion out of multiple people, so it's kind of bubbling up that way. I would try to not be single threaded on only one person. I know that's not what you were saying in the slide, but give yourself multiple entry points without being unfocused. Right. I would maintain an open mind and just fall in love. We always talk about this, like fall in love with the customer problem. Not exactly how you're pitching it, because the product is probably right, but you may be five degrees off on how they want to hear the value to why they want to do it. And just maintain really open ears kind of around exactly why they want you, because I suspect you might have multiple people pulling for it over time. Once they know what it is, they're not threatened by it. Understood. This is such a good point, Mark. Like, brilliant point. I'll keep an eye out. And actually, it's actionable also because now that these customers that we are working with, we can actually spend more and more time with these other stakeholders, just understand their priorities and immediately we get back on this. I would add that I was going to convey a similar point to market and figuring out the right way to phrase it. There's a renaissance here for data science. Talent companies will bend over backwards to make sure they are happy when they get good talent, and they will have budgets to explore and pay for their own software. The situation where Truefoundry runs into problems is if those individuals feel they're buying other things, that then when the head of ML comes out, is like, no, you're using True Foundry. They're like, no, sorry, we're using our own thing and it doesn't get adoption. So just making sure what Mark is saying, you're winning them over so that they're like, I don't need my budget. I already have it coming from the top two. Foundries what I'm using. That's a great point. Actually, just one last quick note on that one, too. You even mentioned how the Mo guys want to be using Python and stuff. Like just having the right interfaces so that even if they're using some tooling down at a lower level, it can still roll up or they can do some of their stuff and it can still work. I'll give you an example. I was an investor coming back in the early, early cloud today. It's called Blade Logic. That was early orchestration software platform across multiple servers to kind of make it all run in an early cloud. And they had this really awesome user interface, graphical interface that they would sell, but the DevOps guys always use the command prompt line. They never used the actual interface. So they basically created just like a network shell around it so that they could just and that was like what took the product off. It was not like it was amazing. They spent all this way development is GUI and they just wanted to use like a command line interface that didn't even care about the actual and it took them a minute, then they were like, okay, that's how they want to use it. And then it just went. So it could be something interesting like that too, where she maybe uses the dashboard and the UI and all this stuff. But some of the guys that are actually doing want to use or need to work with the product, but they're using it in a more kind of developer oriented way. And just make sure it's flexible enough that it can work with everybody in the work stream that they want to use as their primary workflow. Right. So that take a note of sense. We would love to take this forward, and once I have updates on this, I will let you guys let us. Know if there's like an ICP or whatever type of company or even some examples of ones that you think would be interesting. We'll try to do it and then whatever you'd like. We'd be happy to do a follow up session, introduce you to Alison and just let you kind of go at it with her. I'm sure she'll have a bunch of ideas and thoughts and questions. So I know you're running over. I'm sorry we're keeping you long, but we'd love to keep the conversation going and obviously, even if it's well in advance, if you're ready to raise, we'd be happy to try to help and be helpful so that when you are, at least we can get the mix and have a serious discussion about it if you're interested. Awesome. Thank you so much. Thank you so much, Mark. Yeah. Thanks so much for making the time for us and sharing. Really appreciate congrats on the great early progress. Thank you. Thank you so much. Have a good one. Take care. Bye bye. See you next.